import React, { useState, useEffect } from 'react';
import { SvgContainer, SvgIconProps } from '../SvgIcon';
import { Color } from '../../../../constants/color';

const QuestionHeaderIcon = ({
  stroke,
  strokeWidth,
  width,
  height,
}: SvgIconProps) => {
  const [isClient, setClientSide] = useState<boolean | undefined>();
  const [isHover, toggleHover] = useState<boolean>(false);
  useEffect(() => {
    setClientSide(true);
  }, []);
  return !isClient ? null : (
    <SvgContainer
      stroke={!isHover ? stroke : `${Color.$pink_primary}`}
      strokeWidth={strokeWidth}
      onMouseOver={() => toggleHover(true)}
      onMouseOut={() => toggleHover(false)}
    >
      <svg
        width={width??20}
        height={height??20}
        viewBox='0 0 20 20'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          d='M11.125 14.875C11.125 15.0975 11.059 15.315 10.9354 15.5C10.8118 15.685 10.6361 15.8292 10.4305 15.9144C10.225 15.9995 9.99876 16.0218 9.78053 15.9784C9.5623 15.935 9.36184 15.8278 9.20451 15.6705C9.04718 15.5132 8.94003 15.3127 8.89662 15.0945C8.85321 14.8762 8.87549 14.65 8.96064 14.4445C9.04579 14.2389 9.18998 14.0632 9.37499 13.9396C9.55999 13.816 9.7775 13.75 10 13.75C10.2984 13.75 10.5845 13.8685 10.7955 14.0795C11.0065 14.2905 11.125 14.5766 11.125 14.875ZM10 4.75C7.93188 4.75 6.25 6.26406 6.25 8.125V8.5C6.25 8.69891 6.32902 8.88968 6.46967 9.03033C6.61033 9.17098 6.80109 9.25 7 9.25C7.19892 9.25 7.38968 9.17098 7.53033 9.03033C7.67099 8.88968 7.75 8.69891 7.75 8.5V8.125C7.75 7.09375 8.75969 6.25 10 6.25C11.2403 6.25 12.25 7.09375 12.25 8.125C12.25 9.15625 11.2403 10 10 10C9.80109 10 9.61033 10.079 9.46967 10.2197C9.32902 10.3603 9.25 10.5511 9.25 10.75V11.5C9.25 11.6989 9.32902 11.8897 9.46967 12.0303C9.61033 12.171 9.80109 12.25 10 12.25C10.1989 12.25 10.3897 12.171 10.5303 12.0303C10.671 11.8897 10.75 11.6989 10.75 11.5V11.4325C12.46 11.1184 13.75 9.75437 13.75 8.125C13.75 6.26406 12.0681 4.75 10 4.75ZM19.75 10C19.75 11.9284 19.1782 13.8134 18.1068 15.4168C17.0355 17.0202 15.5127 18.2699 13.7312 19.0078C11.9496 19.7458 9.98919 19.9389 8.09787 19.5627C6.20656 19.1865 4.46928 18.2579 3.10571 16.8943C1.74215 15.5307 0.813554 13.7934 0.437348 11.9021C0.061142 10.0108 0.254225 8.05042 0.992179 6.26884C1.73013 4.48726 2.97982 2.96451 4.58319 1.89317C6.18657 0.821828 8.07164 0.25 10 0.25C12.585 0.25273 15.0634 1.28084 16.8913 3.10872C18.7192 4.93661 19.7473 7.41498 19.75 10ZM18.25 10C18.25 8.3683 17.7661 6.77325 16.8596 5.41655C15.9531 4.05984 14.6646 3.00242 13.1571 2.37799C11.6497 1.75357 9.99085 1.59019 8.39051 1.90852C6.79017 2.22685 5.32016 3.01259 4.16637 4.16637C3.01259 5.32015 2.22685 6.79016 1.90853 8.3905C1.5902 9.99085 1.75358 11.6496 2.378 13.1571C3.00242 14.6646 4.05984 15.9531 5.41655 16.8596C6.77326 17.7661 8.36831 18.25 10 18.25C12.1873 18.2475 14.2843 17.3775 15.8309 15.8309C17.3775 14.2843 18.2475 12.1873 18.25 10Z'
          fill='#969696'
        />
      </svg>
    </SvgContainer>
  );
};
export default QuestionHeaderIcon;
